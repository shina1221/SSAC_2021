#반복문
#dir()로 식별자확인
#리스트 자료형
"""
-여러 자료를 함께 보관/관리
-자료의 저장 순서가 있음(시퀀스 자료형)
-0번쨰부터 시작하는 인덱스
-리스트에 저장되는 자료들은 같은 자료형이 아니어도 된다.
cf) 배열: 같은 자료형만 여러개 저장하는 시퀀스 자료 구조
-mutalbe 객체(자료형) : 요소변경 가능
cf)immutable 객체: tuple, 문자열
-데이터 중복 허용: 같은 값의 요소를 여러개 가질 수 있음
cf) 데이터의 중복을 허용하지 않는 자료형 : set()
    키의 중복을 허용하지 않는 자료형 : dict()

#파이썬에서 원래 배열을 지원하지 않음 대신 array 모듈을 지원
"""
#문자열은 한 글자를 쪼개서 대체 불가능. 따라서 새로 만들어야 함.
"""
name = 'Ice4u'
name[2]=E #에러
"""

#list() 클래스로 리스트 객체 생성
#-list()인자로 리스트, 튜플, 문자열 입력
#list(1)불가
#list([1]) or list((1,))로 원소 하나짜리 리스트 생성

#리스트의  append(), insert(), extend() 메서드
#- 파괴적 메서드:원본이 변경됨

#extend() 메서드
# - + 연산자와 같은 기능을 수행하지만 파괴적 연산
"""
ex)
>>> list_a = [1, 2, 3]
>>> list_a.extend([4, 5, 6])
+ 연산자로 위와 같은 결과를 얻으려면
>> list_a = list_a + [4, 5, 6]
>> list_a += [4, 5 ,6]

#del 키워드, del문 
del 리스트명[인덱스]
-식별자(변수, 함수, 클래스) 요소 제거
# a = del list_b[3] 불가

#list.pop()메서드
- 인자없이 사용하면 마지막 요소가 반환됨
리스트명.pop(인덱스)

#list.remove()메서드
-del, pop()과 차이점: 인덱스가 아닌 값을 찾아서 처음 찾아낸 원소 제거

#for문
* for의 반복변수는 for 문이 종료되어도 사라지지 않음
"""
list_a = list(range(8)

"""
파이썬에는 가비지콜렉션이 있어서 안쓰는 변수를 삭제해 줌
"""