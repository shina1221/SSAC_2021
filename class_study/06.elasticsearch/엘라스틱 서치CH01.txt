#번외 centOS https://copycoding.tistory.com/269

JDK는 1.8.0 버전
일레스틱서치와 웨비나는 반드시 버전이 같아야 함

자바 환경변수를 지정해줘야 일레스틱 서치 구동 가능
https://marobiana.tistory.com/163

윈도우 기준 일렉스틱서치/bin폴더 가서 bat파일 구동

구동후 started 뜨면 제대로 실행된것임

#실행에러 날 경우
config>elasticsearch yml파일을 메모장으로 열고 맨아래에 한줄 추가
xpack.ml.enabled: false 
저장 후 다시 시작

#종료는 ctrl+C

#이후
config>elasticsearch yml파일에 다음의 내용을 작성한뒤 재실행

cluster.name: javacafe-cluster
node.name: javacafe-node1
network.host: 0.0.0.0
http.port: 9200
transport.tcp.port: 9300
node.master: true
node.data: true
path.repo: ["C:/book_backup/search_example","C:/book_backup/agg_example"]

#엘라스틱 서치가 정상적으로 실행된 후 path.repo의 search_example 디렉터리의 데이터 활성화하기

#엘라스틱 서치가 켜진 cmd는 놔두고 새로운 cmd창을 열어서 진행
#영화서치 데이터

1. book_backup/search_example
--------------------윈도우-----------------
curl -H "Content-Type: application/json" -XPUT "http://localhost:9200/_snapshot/javacafe" -d "{\"type\": \"fs\", \"settings\": {\"location\":\"C:/book_backup/search_example\", \"compress\": true}}"
curl -XGET "http://localhost:9200/_snapshot/javacafe/_all"?pretty -u elastic:bigdata
curl -XPOST "http://localhost:9200/_snapshot/javacafe/movie-search/_restore" -u elastic:bigdata
--------------------리눅스-----------------
curl -H "Content-Type: application/json" -XPUT "http://localhost:9200/_snapshot/javacafe" -d "{\"type\": \"fs\", \"settings\": {\"location\":\"/home/elastic-2/book_backup/search_example\", \"compress\": true}}" -u elastic:bigdata
curl -XGET "http://localhost:9200/_snapshot/javacafe/_all"?pretty -u elastic:bigdata
curl -XPOST "http://localhost:9200/_snapshot/javacafe/movie-search/_restore" -u elastic:bigdata
2. book_backup/agg_example

#아파치 리뷰데이터
--------------------윈도우-----------------
curl -H "Content-Type: application/json" -XPUT "http://localhost:9200/_snapshot/apache-web-log" -d "{\"type\": \"fs\", \"settings\": {\"location\":\"C:/book_backup/agg_example\", \"compress\": true}}"
curl -XGET "http://localhost:9200/_snapshot/apache-web-log/_all" -u elastic:bigdata
curl -XPOST "http://localhost:9200/_snapshot/apache-web-log/default/_restore" -u elastic:bigdata
--------------------리눅스-----------------
curl -H "Content-Type: application/json" -XPUT "http://localhost:9200/_snapshot/apache-web-log" -d "{\"type\": \"fs\", \"settings\": {\"location\":\"/home/elastic-2/book_backup/agg_example\", \"compress\": true}}" -u elastic:bigdata
curl -XGET "http://localhost:9200/_snapshot/apache-web-log/_all" -u elastic:bigdata
curl -XPOST "http://localhost:9200/_snapshot/apache-web-log/default/_restore" -u elastic:bigdata
#아파치 리뷰데이터

#키바나 config의 kibana yml파일수정
elasticsearch.url: "http://localhost:9200" 주석제거
키바나 실행

#이후 http://localhost:5601/ 웹으로 들어가서 정상동작하는지 확인

#키바나 웹>dev tools >get work 창을 통해 쿼리를 사용

#인덱스는 모두 소문자여야 함.

########################
PUT movie_kibana_execute/_doc/1
{
  "message":"helloworld"
}

GET movie_kibana_execute/_search
{
  "query" : {
    "match_all": {}
  }
}

PUT /movie
{
  "settungs":{
    "number of shards": 3,
    "number_of_replicars": 2 
  },
  "mappings": {
    "_doc": {
      "properties": {
        "movieCd": {"type":"integer"},
        "movieNm": {"type":"text"},
        "movieNmEn": {"type":"text"},
        "prdtYear": {"type":"integer"},
        "openDt": {"type":"date"},
        "typeNm": {"type":"keyword"},
        "prdtStatNm": {"type":"keyword"},
        "nationAlt": {"type":"keyword"},
        "genreAlt": {"type":"keyword"},
        "repNationNm": {"type":"keyword"},
        "repGenreNm": {"type":"keyword"}
      }
    }
  }    
}

DELETE /movie

POST /movie/_doc/1
{
  "movieCd":"1",
  "movieNm": "살아남은 아이",
  "movieNmEn": "Last Child",
  "prdtYear" : "2017",
  "openDt": "2017-10-20",
  "typeNm": "장편",
  "prdtStatNm": "기타",
  "nationAlt": "한국",
  "genreAlt" : "드라마,가족",
  "repNationNm": "한국",
  "repGenreNm":"드라마"
}

GET /movie/_doc/1 

DELETE /movie/_doc/1


#ID를 지정하징 않고 문서생성
#이렇게 하면 UUID를 통해 _id값이 무작위생성
POST /movie/_doc
{
  "movieCd":"1",
  "movieNm": "살아남은 아이",
  "movieNmEn": "Last Child",
  "prdtYear" : "2017",
  "openDt": "2017-10-20",
  "typeNm": "장편",
  "prdtStatNm": "기타",
  "nationAlt": "한국",
  "genreAlt" : "드라마,가족",
  "repNationNm": "한국",
  "repGenreNm":"드라마"
}

#검색 API
#안됨
GET /movie/_doc/_search?q=prdtYear:2017&pretty=true
{
  "sort":{
    "movieCd":{
      "order":"asc"
    }
  }
}

#URI방식의 검색질의
GET /movie/_doc/orQFonwBYwaoI5VCvw9T?pretty=true

#결과가 다르게 나옴
POST /movie/_search?q=장편
#결과가 다르게 나옴
POST /movie/_search?q=typeNm:장편

POST movie/_search
{
  "query": {
    "term" : {"typeNm":"장면"}
  }
}

#데이터 집계
POST /movie/_search?size=0
{
  "ages":{
    "genre" :{
      "terms":{
        "field":"genreAlt"
      }
    }
  }
}


POST movie/_search?size=0
{
  "aggs": {
    "genre": {
      "terms": {
        "field": "genreAlt" 
      },
      "aggs":{
        "nation":{
          "terms":{
            "field": "nationAlt"
          }
        }
      }
    }
  }
}



