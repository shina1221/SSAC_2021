#아래의 명령어로 root 계정으로 들어감
#su root 
#host 파일로 들어감
#sudo gedit /etc/hosts
#앞으로 ip로 노드 구분하면 불편하니까 추가
#각 노드들의 hosts파일에 전부 추가
192.168.56.101 elastic-1
192.168.56.102 elastic-2
192.168.56.103 elastic-3
#저장후 exit해서 localhost로 돌아옴

#각 노드별 계정@컴퓨터이름 중에서 컴퓨터 이름 변경
hostnamectl set-hostname elastic-1
hostnamectl set-hostname elastic-2
hostnamectl set-hostname elastic-3

#이후에 터미널을 껐다가 다시 키면 됨

##엘라스틱서치 설치하기
#wget으로 파일을 받기위해 wget 설치
#이때는 root 계정으로 해야함
sudo yum -y install wget

#이후부터는 exit해서 localhost로 변경한 후 진행
exit
#홈디렉토리에서 실행
cd ~

#파일 다운
wget https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-7.14.1-linux-x86_64.tar.gz 
wget https://artifacts.elastic.co/downloads/kibana/kibana-7.14.1-linux-x86_64.tar.gz

#압축풀기
tar xfz elasticsearch-7.14.1-linux-x86_64.tar.gz
tar xfz kibana-7.14.1-linux-x86_64.tar.gz

#디렉토리 생성 및 집파일 옮기기
mkdir files
mv *.tar.gz files/

#이름변경
mv elasticsearch-7.14.1 es-714
mv kibana-7.14.1-linux-x86_64 kb-714

#아래 경로의 파일을 열고
gedit ~/es-714/config/jvm.options

#원래 그냥 파일 그대로 두고 
#센터 노트북 메모리 16기가 이므로 그냥 디폴트로 놔도 메모리에 제약없을 듯해서 놔둠
#내 노트북으로 옮기는 순간 아래의 내용으로 변경해야 할 듯 4정도까지는 가능하지 않을까... 
#자바 버추얼 머신에서 ##두개만 삭제한 그상태에서 숫자만 변경해 사용하는 메모리의 사이즈 조정
-Xmas4g >-Xmas1g
-Xmax4g >-Xmax1g

#아래의 파일로 들어가서
sudo gedit /etc/security/limits.conf

#아래에 추가 후 저장
#엘라스틱 서치가 열 수 있는 파일의 갯수나 프로세스 수, 메모리 락 같은 것에 대해 제한을 없애는 것임
elastic-n	soft	nofile	65535
elastic-n	hard	nofile	65535
elastic-n	hard	nproc	65535
elastic-n	soft	nproc	65535
elastic-n	soft	memlock	unlimited
elastic-n	hard	memlock	unlimited

#아래의 파일을 열고
sudo gedit /etc/security/limits.d/20-nproc.conf

#다음의 내용 추가
#*는 모든 계정에 대해서 하겠다는 의미임
*	soft	nofile	65535
*	hard	nofile	65535
*	hard	nproc	65535
*	soft	nproc	65535
*	soft	memlock	unlimited
*	hard	memlock	unlimited

(단, *  soft        nproc      4096 줄은 주석처리)
(root줄 위에 올라와야함)

#다음의 파일을 열고
sudo gedit /etc/sysctl.conf

#맨마지막에 내용 추가
vm.max_map_count=262144

#리눅스 리부트
sudo shutdown -r
#생각보다 시간이 좀 지나고 나서 리부트 됨 걱정마셈
#바로 리부트 하고 싶다면 
sudo shutdown -r now

#노드별 아래의 파일을 열고
gedit ~/es-714/config/elasticsearch.yml

#앞에까지 root에서 했는데 
#여기선 exit로 나와서 로컬호스트에서 넣어야 함.
#노드별로 다음의 내용 넣기(노드별로 내용이 다르니 유의)
#Node 1
cluster.name: "es-cluster"
node.name: "node-1"
#network.host: "192.168.56.101"
network.host: ["_local_", "_site_"]
discovery.seed_hosts: ["192.168.56.101", "192.168.56.102", "192.168.56.103"]
cluster.initial_master_nodes: ["node-1", "node-2", "node-3"]
xpack.security.enabled: true
xpack.security.transport.ssl.enabled: true
xpack.security.transport.ssl.keystore.path: certs/es-cluster.p12
xpack.security.transport.ssl.truststore.path: certs/es-cluster.p12

#Node 2
cluster.name: "es-cluster"
node.name: "node-2"
#network.host: "192.168.56.102"
network.host: ["_local_", "_site_"]
discovery.seed_hosts: ["192.168.56.101", "192.168.56.102", "192.168.56.103"]
cluster.initial_master_nodes: ["node-1", "node-2", "node-3"]
xpack.security.enabled: true
xpack.security.transport.ssl.enabled: true
xpack.security.transport.ssl.keystore.path: certs/es-cluster.p12
xpack.security.transport.ssl.truststore.path: certs/es-cluster.p12

#Node 3
cluster.name: "es-cluster"
node.name: "node-3"
#network.host: "192.168.56.103"
network.host: ["_local_", "_site_"]
discovery.seed_hosts: ["192.168.56.101", "192.168.56.102", "192.168.56.103"]
cluster.initial_master_nodes: ["node-1", "node-2", "node-3"]
xpack.security.enabled: true
xpack.security.transport.ssl.enabled: true
xpack.security.transport.ssl.keystore.path: certs/es-cluster.p12
xpack.security.transport.ssl.truststore.path: certs/es-cluster.p12

#security 에 공개키 만들어서 배포: 아무 노드나 통신하면 안되니까 

#포트열기 모든 노드들에
#sudo su 안되니까 su root
firewall-cmd --permanent --zone=public --add-port=9200/tcp
firewall-cmd --permanent --zone=public --add-port=9300/tcp
firewall-cmd --reload
firewall-cmd --list-all

#세번째 노드만!!!!!!!!
#키바나는 세번째 노드에서만 실행할 예정
firewall-cmd --permanent --zone=public --add-port=5601/tcp
firewall-cmd --reload
firewall-cmd --list-all
exit

#보안설정하기
#마스터노드에서 공개키 만들어서 배포하듯 첫번째 노드에서만 만들음
#첫번째 노드에서만!!!!!!

#첫번째 노드에서 키만들기
~/es-714/bin/elasticsearch-certutil ca
(elastic-stack-ca-p12 파일 생성하는데 첫번째 그냥 엔터하고 두번재는 bigdata)

#대칭키 만들기
mkdir ~/es-714/config/certs

#
~/es-714/bin/elasticsearch-certutil cert \
--ca  elastic-stack-ca.p12 \
--ip 192.168.56.101,192.168.56.102,192.168.56.103 \
--out ~/es-714/config/certs/es-cluster.p12

ls ~/es-714/config/certs/

2번과 3번 컴퓨터에 배포를 시킬거니 2번과 3번 컴퓨터에 
이렇게 만들고
mkdir ~/es-714/config/certs

1번 컴퓨터에서 이렇게 배포
scp -r ~/es-714/config/certs/* elastic-2@192.168.56.102:~/es-714/config/certs/
scp -r ~/es-714/config/certs/* elastic-3@192.168.56.103:~/es-714/config/certs/

#키스토어 생성 모든 노드에
~/es-714/bin/elasticsearch-keystore create

#모든 노드에 생성
~/es-714/bin/elasticsearch-keystore add xpack.security.transport.ssl.keystore.secure_password
~/es-714/bin/elasticsearch-keystore add xpack.security.transport.ssl.truststore.secure_password

#모든노드에 잘 만들어졌는지 확인
~/es-714/bin/elasticsearch-keystore list

#모든 노드에서 elasticsearch 실행   1번이랑 3번이 안되므로 해당 노드들 다시 볼 것 
~/es-714/bin/elasticsearch 

#이후에 노드1에서만 모든 비밀번호 bigdata
~/es-714/bin/elasticsearch-setup-passwords interactive

#모두 실행했다면 이후에 제대로 실행이 되었는지 확인
#마스터 노드(*)는 랜덤으로 설정됨
curl "elastic-1:9200/_cat/nodes?v" -u elastic:bigdata

#동기화 되어있기 때문에 어디서든 일레스틱 서치 쿼리를 던질 수 있음 
curl -XGET elastic-1:9200 -u elastic:bigdata
curl -XGET elastic-2:9200 -u elastic:bigdata
curl -XGET elastic-3:9200 -u elastic:bigdata

####################################키바나 ##########################################
#일레스틱서치 켜진 상태로 세번째 노드 터미널에서 아래파일 열고
gedit ~/kb-714/config/kibana.yml

#맨위에 해당 내용 삽입
server.host: "192.168.56.103"
server.name: "my-kibana"
elasticsearch.hosts: ["http://192.168.56.103:9200"]
elasticsearch.username: "kibana_system"

#키바나에서도 키스토어를 만들어서 사용해야 함
~/kb-714/bin/kibana-keystore create

#비밀번호
~/kb-714/bin/kibana-keystore add elasticsearch.password

#아래의 명령어를 했을 대 elasticsearch.password 파일이 생성되어 있으면 됨
~/kb-714/bin/kibana-keystore list

#파이어 폭스 업데이트 노드 3에서만
sudo yum -y update firefox

# 키바나 실행 후 
~/kb-714/bin/kibana

웹브라우저에 다음의 주소를 치고 들어감
192.168.56.103:5601

ID:elastic / password:bigdata

#로그인해서 들어간 창에 
