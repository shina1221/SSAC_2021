#정수 삼각형
"""
문제 : https://programmers.co.kr/learn/courses/30/lessons/43105

                 7  
              3     8
            8    1     0
         2     7    4     4
      4     5    2     6     5

N위와 같은 삼각형의 꼭대기에서 바닥까지 이어지는 경로 중, 
거쳐간 숫자의 합이 가장 큰 경우를 찾아보려고 합니다. 
아래 칸으로 이동할 때는 대각선 방향으로 한 칸 오른쪽 또는 왼쪽으로만 이동 가능합니다. 
예를 들어 3에서는 그 아래칸의 8 또는 1로만 이동이 가능합니다.

삼각형의 정보가 담긴 배열 triangle이 매개변수로 주어질 때, 
거쳐간 숫자의 최댓값을 return 하도록 solution 함수를 완성하세요.

제한사항
- 삼각형의 높이는 1 이상 500 이하입니다.
- 삼각형을 이루고 있는 숫자는 0 이상 9,999 이하의 정수입니다.

입출력 예

triangle                                                       result                          
[[7], [3, 8], [8, 1, 0], [2, 7, 4, 4], [4, 5, 2, 6, 5]]          30  
"""

"""
7                                                               2의0제곱 
7+3                             7+8                             2의1제곱 
7+3+8           7+3+1           7+8+1,          7+8+0           2의2제곱
7+3+8+2 7+3+8+7 7+3+1+7 7+3+1+4 7+8+1+7 7+8+1+4 7+8+0+4 7+8+0+4 2의3제곱
...(길어서 생략)                                                2의4제곱
#이전 총합+마지막으로 더한수의 인덱스번째 수, 이전 총합+마지막으로 더한수의 인덱스+1번째 수
#이하 반복

#예시
7                                                               2의0제곱 
7+3                             7+8                             2의1제곱 
7+3+8           7+3+1           7+8+1,          7+8+0           2의2제곱



[[7], [3, 8], [8, 1, 0], [2, 7, 4, 4], [4, 5, 2, 6, 5]]     
#대각선 방향으로 오른쪽 한칸 혹은 왼쪽 한칸 이동

7을 기준으로 총값은 7
score=[7,0,0,0,0,0,0,0,0,...]
                                          ??????????????????????? 
7+3을 기준으로 이전 총 값은 score 기준 [현재 인덱스 (2의 0제곱)-1] 값 번째에 있는 값+triangle[현재 인덱스][배열 내 현재 인덱스]값   
                                                    [7,0,0,0,0,0,0,0,0,0...] + triangle[0][0] 
                                                                           7 + 3         
7+8을 기준으로 이전 총 값은 score 기준 [현재 인덱스 (2의 0제곱)-1] 번째에 있는 값+triangle[현재인덱스][배열 내 현재 인덱스]값,  
                                                                           7 + 8 
score=[7,10,15,0,0,0,0,0,0,...]
7+3+8을 기준으로 이전 총값은 score 기준 [현재 인덱스 (2의1제곱)-1]번째 값 + triangle[현재인덱스][현재 인덱스-1]값
                                                                          + triangle[현재인덱스][현재 인덱스-0]값    

                                                                       10 + triangle[1][0] //10+8  =18                                                   
                                                                       10 + triangle[1][1] //10+1  =11

                                                                       15 + triangle[2][1] //15+1  =16
                                                                       15 + triangle[2][2] //15+0  =15              

score=[7,10,15,18,11,16,15,0,0,...]
7+3+8+2를 기준으로 이전 총값은 score 기준 [현재 인덱스 (2의2제곱)-1]번째 값 + triangle[현재인덱스][현재 인덱스-1]값
                                                                            + triangle[현재인덱스][현재 인덱스-0]값
                                                                           
                                                                         18 + triangle[3][0] //18+2  =20                                                   
                                                                         18 + triangle[3][1] //18+7  =25

                                                                         11 + triangle[4][1]  //11+7  =18 
                                                                         11 + triangle[4][2]  //11+4  =15

                                                                         16 + triangle[5][1]  //16+7  =23
                                                                         16 + triangle[5][2]  //16+4  =20

                                                                         15 + triangle[6][2]  //15+4  =19
                                                                         15 + triangle[6][3]  //15+4  =19

[[7], [3, 8], [8, 1, 0], [2, 7, 4, 4], [4, 5, 2, 6, 5]]     
7+3+8+2+4를 기준으로 이전 총                                                                         
                                                                       
"""
def solution(triangle):
    answer = 0
    return answer
######이하는 시행착오#####################################################
#총 비용값을 넣을 리스트 생성
#score=[0]*((len(triangle)-1)**2)
score=[0,0,0]
triangle=[[7], [3, 8], [8, 1, 0], [2, 7, 4, 4], [4, 5, 2, 6, 5]] 
for i,ii in enumerate(triangle):
    if i == 0:
        score[i]=ii[i]
        continue
    if i == 1:
        score[i]=score[i-1]+triangle[i][i-1]
        score[i+1]=score[i-1]+triangle[i][i]
        continue
    print(i, ii)
    for j in range(len(ii)-1):
        print('j,j+1', ii[j], ii[j+1])
        print('score',score[(2*i)-1]+ii[j], score[(2*i)-1]+ii[j+1])
        #score.append(score[(2*i)-1]+ii[j], score[(2*i)-1]+ii[j+1])



        if cnt==3:
            break
        else:
            
            cnt+=1
        print()
        #score.append(ii+triangle[i][j])
        print(score[i-1],'+',triangle[i][i-j])
        print(score[i-1],'+',triangle[i][i])